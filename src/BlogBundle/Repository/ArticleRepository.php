<?php

namespace BlogBundle\Repository;

use Doctrine\ORM\EntityRepository;
/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends \Doctrine\ORM\EntityRepository
{

  public function getArticleBlog($categorie)
  {
    return $this->createQueryBuilder('ab')
                ->leftJoin('ab.image', 'i')
                  ->addSelect('i')
                ->where('ab.categorie = :categorie')
                  ->setParameter('categorie', $categorie)
                ->orderBy('ab.datePublication', 'DESC')
                ->getQuery()
                ->getResult();
  }
  public function getArticleTeam()
  {
    /* On récupère les articles avec les images en les triant par catégories, on sélectionne uniquement ceux
    qui viennent du blog de l'Equipe, on trie par ordre descendant et on retourne le tout */
    return $this->createQueryBuilder('a')
                ->leftJoin('a.image', 'i')
                  ->addSelect('i')
                ->where('a.categorie = :categorie')
                  ->setParameter('categorie', 'TEAM')
                ->orderBy('a.datePublication', 'DESC')
                ->getQuery()
                ->getResult();
  }

  public function getArticleMembre()
  {
    /* On récupère les articles avec les images en les triant par catégories, on sélectionne uniquement ceux
    qui viennent du blog des Membres, on trie par ordre descendant et on retourne le tout */
    return $this->createQueryBuilder('a')
                ->leftJoin('a.image', 'i')
                  ->addSelect('i')
                ->where('a.categorie = :categorie')
                  ->setParameter('categorie', 'MEMBRE')
                ->orderBy('a.datePublication', 'DESC')
                ->getQuery()
                ->getResult();
  }

  public function getArticleKrma()
  {
    /* On récupère les articles avec les images en les triant par catégories, on sélectionne uniquement ceux
    qui viennent du blog de Krma, on trie par ordre descendant et on retourne le tout */
    return $this->createQueryBuilder('a')
                ->leftJoin('a.image', 'i')
                  ->addSelect('i')
                ->where('a.categorie = :categorie')
                  ->setParameter('categorie', 'KRMA')
                ->getQuery()
                ->getResult();
  }


  public function getUpdateArticle($id)
  {
      return $this->createQueryBuilder('a')
                  ->leftJoin('a.image', 'i')
                    ->addSelect('i')
                  ->where('a.id = :id')
                    ->setParameter('id', $id)
                  ->getQuery()
                  ->getResult();
  }

  public function getArticle()
  {
    return $this->createQueryBuilder('a')
                ->leftJoin('a.image', 'i')
                  ->addSelect('i')
                ->orderBy('a.datePublication', 'DESC')
                ->getQuery()
                ->getResult();
  }
}
